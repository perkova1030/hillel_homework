console.log('number' + 3 + 3) //Происходит конкатенация (склеивание) строк в том порядке, в котором записаны операнды. Результат: number33

console.log (null + 3) //null преобразовывается к числу 0. Используется арифметическая операция сложения двух чисел 0 и 3. Результат: 3

console.log (5 && "qwerty") // Так как все значение правдивы (true), то вычисление дойдет до конца и вернется последнее значение, в данном примере вернется qwerty

console.log (+'40' + +'2' + "hillel") 
/* Унарный плюс преобразовал 40 и 2 к типу number. 
Между ними стоит арифметическая операция сложения. То есть 40 +2. 
Затем происходит конкатенация 42 и hillel (тип string). 
Результатом будет 42hillel */

console.log ('10' - 5 === 6) 
/* Строка 10 преобразована к числу. 
Между 10 и 5 стоит арифметическая операция вычитания, то есть 10 минус 5 будет 5. 
Оператор строго равества сравнивает, равны ли 5 и 6 по значению или типу данных. Числа 5 и 6 не равны друг другу и возвращается false */

console.log (true + false) // true приравнивается к единице, а false к 0. Между ними стоит арифметическая операция сложения двух чисел. 1 минус 0 будет 1

console.log('4px' - 3) 
/* JavaScript не может преобразовать тип sting 4px в тип number. Между string и 3 стоит операция вычитания. 
От строки невозможно отнять число, поэтому возвращается NaN */

console.log ('4' - 3) // Строка 4 преобразована к типу number. Между переменными типа number стоит арифметическая операция вычитания. Результат: 1

console.log ('6' + 3 ** 0) 
/* 3 в нулевой степени равно 1. 
Происходит конкатенация 6 (тип string) и 1 (тип number). Результат: 61 */

console.log (12 / '6') // Тип переменной 12 number. String '6' преобразована к типу number. Между переменными стоит арифметическая операция сложения. 12 поделить на 6 будет 2

console.log ('10' + (5 === 6)) 
/* Оператор строго равества сравнивает, равны ли друг другу 5 и 6 по значению или типу данных. 
Числа 5 и 6 не равны друг другу, значит вернется false. 
При складывании string и boolean происходит конкатенация. Результат: 10false */

console.log (null == '') // Тип данных ' ' это string (пустая строка). Тип данных null это object. Между этими типами стоит оператор равенства. Типы string и object не равны по значению. Результат: false

console.log(3 ** (9 / 3)) 
/* 
Сначала выполняется действие в скобках. 9 (тип number) поделить на 3 (тип number) равно 3. 
3 в 3 степени будет 27 */

console.log (!!'false' == !!'true') 
/* Если добавить '!!' к строке, то идет проверка является ли строка true или false. В JS, все не пустые строки это true. 
Поэтому !!'false' приравнивает к true.
!!true приравнивается к true, потому что все не пустые строки это true. 
Выражение сейчас выглядит как 'true' == 'true'
Далее, значения сравниваются, с помощью логического оператора равенства (==). 
Оба имеют тип boolean.
Результат: true */

console.log (0 || '0' && 1) 
/* Логический оператор И (&&) имеет более высокий приоритет, чем логический оператор ИЛИ (||).
'0' && 1. Операнд '0' имеет значение true, потому что его тип string. Операнд 1 имеет значение true. 
Оператор && вернул второй операнд, так как первый true.
0 || 1. Операнд '0' имеет значение false. Операнд 1 имеет значение true.
Так как первый операнд false, оператор ИЛИ (||) вернул значение второго операнда
Результат: 1 */

console.log (+null == false) 
/* Унарний '+' переобразовал null к числу. +null это 0. 
Оператор равенства сравнивает +null и false. Они разные по типу данных, но одинаковые по значению. 
Результат: true */

console.log (false && true || true) 
/* Оператор && сравнивает два операнда false и true. Возвращает false, так как левый операнд true. 
Оператор || сравнивает true и true. И возвращает true, так как хотя бы один операнд true. 
Результат: true */

console.log (false && (false || true)) 
/* Первое действие выполняется в скобках. Оператор || сравнивает false и true. И возвращает true, так как хотя бы один операнд true. 
Оператор && сравнивает два операнда false и true. И возвращает false, так как левый операнд true. 
Результат: false */

console.log ((+null == false) < 1 ** 5) 
/* Выполняется правоассоциативная операция. Число 1 возводится в 5 степень. Равно 1. 
Потом выполняется операция в скобках. Унарний '+' переобразовал null к числу. 
Оператор равенства сравнивает +null и false. Выводит true, так как они одинаковые по значению. 
Далее оператор равенства сравнивает меньше ли true единице. 
True это 1. 
1 = 1. 
Результат: false */
